{"version":3,"sources":["components/Cards.js","components/Nav.js","App.js","index.js"],"names":["styles","imageStyle","height","width","border","borderRadius","Card","props","this","style","className","key","id","src","alt","Component","Nav","currentScore","topScore","App","state","images","chosenCards","shuffleCards","i","length","j","Math","floor","random","handleImageClick","event","preventDefault","userSelection","target","gameSimulator","choice","array","includes","alert","setState","score","push","console","log","backgroundImage","backgroundRepeat","backgroundSize","map","image","href","onClick","name","ReactDOM","render","document","getElementById"],"mappings":"6MAEMA,G,MAAS,CACbC,WAAY,CACVC,OAAQ,IACRC,MAAO,IACPC,OAAQ,oBACRC,aAAc,SAoBHC,E,iLAbX,IAAMC,EAAQC,KAAKD,MAEnB,OACE,yBAAKE,MAAOT,EAAOC,WACfS,UAAU,6CACVC,IAAKJ,EAAMK,GACXC,IAAKN,EAAMM,IACXC,IAAKP,EAAMO,U,GAVFC,aCYJC,E,iLAlBX,IAAMT,EAAQC,KAAKD,MAEnB,OACE,yBAAKG,UAAU,+BACb,yBAAKA,UAAU,kCACf,4CACA,uDACE,mDAEF,yBAAKA,UAAU,uBACb,sCAAW,gCAASH,EAAMU,eAC1B,2CAAgB,gCAASV,EAAMW,iB,GAdvBH,aC4HHI,E,2MAtHbC,MAAQ,CACNC,SACAJ,aAAc,EACdC,SAAU,EACVI,YAAa,I,EAIfC,aAAe,SAACF,GACZ,IAAK,IAAIG,EAAIH,EAAOI,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,IAAIE,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADE,EAEjB,CAACH,EAAOK,GAAIL,EAAOG,IAA3CH,EAAOG,GAFkC,KAE9BH,EAAOK,GAFuB,O,EAwDhDI,iBAAmB,SAAAC,GACjBA,EAAMC,iBAEN,IAAIC,EAAgBF,EAAMG,OAAOpB,IAC7BQ,EAAc,EAAKF,MAAME,YAC7B,EAAKa,cAAcF,EAAcX,I,6EAvDpBc,EAAQC,GAGrB,GAAIA,EAAMC,SAASF,GACjBG,MAAM,+BAGF/B,KAAKY,MAAMH,aAAeT,KAAKY,MAAMF,UACvCV,KAAKgC,SAAS,CACZtB,SAAUV,KAAKY,MAAMH,eAIzBT,KAAKgC,SAAS,CACZvB,aAAc,EACdK,YAAa,KAGfd,KAAKe,aAAaF,OAGb,CAGL,IAAIoB,EAAQjC,KAAKY,MAAMH,aAAe,EACtCT,KAAKgC,SAAS,CACZvB,aAAcwB,IAGhBJ,EAAMK,KAAKN,GACXO,QAAQC,IAAR,uBAA4BR,IAC5BO,QAAQC,IAAR,wBAA6BP,IAE7B7B,KAAKe,aAAaF,GAGJ,IAAVoB,IACFF,MAAM,gCAEN/B,KAAKgC,SAAS,CACZvB,aAAc,EACdC,SAAU,EACVI,YAAa,KAGfd,KAAKe,aAAaF,O,+BAcb,IAAD,OAUR,OACA,yBAAKZ,MARc,CACfoC,gBAAiB,oFACjBC,iBAAkB,YAClBC,eAAgB,UAMlB,kBAAC,EAAD,CACE9B,aAAcT,KAAKY,MAAMH,aACzBC,SAAUV,KAAKY,MAAMF,WAErB,yBAAKR,UAAU,YAAYC,IAAI,iBAC7B,yBAAKD,UAAU,MAAMC,IAAI,YAEnBH,KAAKY,MAAMC,OAAO2B,KAAI,SAAAC,GAAK,OACzB,uBACEC,KAAK,IACLC,QAAS,EAAKrB,iBACdnB,IAAKsC,EAAMrC,GACXF,UAAU,wBAEV,kBAAC,EAAD,CACEC,IAAKsC,EAAMrC,GACXA,GAAIqC,EAAMrC,GACVC,IAAKoC,EAAMA,MACXnC,IAAKmC,EAAMG,kB,GA1GfrC,aCFlBsC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b2b9386b.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst styles = {\n  imageStyle: {\n    height: 210,\n    width: 220,\n    border: '8px solid #343A40',\n    borderRadius: '40%'\n  }\n}\n\nclass Card extends Component {\n\n  render () {\n    const props = this.props\n\n    return (\n      <img style={styles.imageStyle}\n          className='click m-3 text-center bg-light text-center'\n          key={props.id}\n          src={props.src}\n          alt={props.alt}\n      /> \n    )\n  }\n}\n\nexport default Card;","import React, { Component } from 'react'\n\nclass Nav extends Component {\n  \n  render() {\n    const props = this.props\n\n    return (\n      <div className='row py-3 bg-dark text-light'>\n        <div className='offset-lg-1 col-lg-5 text-left'>\n        <p>A Memory Game</p>\n        <p>Click Each Picture Once!</p>\n          <h1>Don't Click Twice!</h1>\n        </div>\n        <div className='col-lg-5 text-right'>\n          <h2>Score: <strong>{props.currentScore}</strong></h2>\n          <h2>Best Score: <strong>{props.topScore}</strong></h2>  \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Nav;","import React, { Component } from 'react';\nimport images from './images'; // array of image objects\nimport './App.css'; // default styling\nimport Card from './components/Cards'; // sends images to DOM\nimport Nav from './components/Nav'; //\n\nclass App extends Component {\n\n  state = {\n    images,\n    currentScore: 0,\n    topScore: 0,\n    chosenCards: []\n  };\n \n  // note fron a friend  to use https://javascript.info/task/shuffle\n  shuffleCards = (images) => {\n      for (let i = images.length - 1; i > 0; i--) {\n        let j = Math.floor(Math.random() * (i + 1)); \n        [images[i], images[j]] = [images[j], images[i]];\n      }\n  }\n\n  gameSimulator (choice, array) {\n\n    // lose scenario\n    if (array.includes(choice)) {\n      alert('You lose, please try again.')\n\n      // check/set state top score\n      if (this.state.currentScore > this.state.topScore) {\n        this.setState({\n          topScore: this.state.currentScore\n        })\n      }\n      // reset state\n      this.setState({\n        currentScore: 0,\n        chosenCards: []\n      })\n      // reset cards\n      this.shuffleCards(images)\n\n    // game continuation\n    } else {\n\n      // iterate score\n      let score = this.state.currentScore + 1\n      this.setState({\n        currentScore: score\n      })\n      // add card to array\n      array.push(choice);\n      console.log(`User Choice: ${choice}`);\n      console.log(`Chosen Cards: ${array}`);\n      // shuffle all cards\n      this.shuffleCards(images)\n      \n      // check score within game continuation\n      if (score === 9) {\n        alert(\"You win! Try to do it again.\")\n        // reset state\n        this.setState({\n          currentScore: 0,\n          topScore: 9,\n          chosenCards: []\n        })\n        // shuffle all cards\n        this.shuffleCards(images)\n      }\n    }\n  }\n\n  handleImageClick = event => {\n    event.preventDefault();\n    \n    let userSelection = event.target.alt;\n    let chosenCards = this.state.chosenCards\n    this.gameSimulator(userSelection,chosenCards);\n  };\n\n\n  render () {\n\n    const style = {\n      backgroundStyle: {\n        backgroundImage: 'url(https://i.pinimg.com/originals/13/a0/75/13a075b4cc0d6668941324e426209b9a.jpg)',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n      }\n    };\n\n    return (\n    <div style={style.backgroundStyle}>\n      <Nav \n        currentScore={this.state.currentScore}\n        topScore={this.state.topScore}\n      />\n        <div className='container' key='mainContainer' >\n          <div className='row' key='imageRow'>\n              {\n                this.state.images.map(image => (\n                  <a \n                    href='/' \n                    onClick={this.handleImageClick} \n                    key={image.id}\n                    className='col-lg-4 text-center'\n                  >\n                    <Card\n                      key={image.id}\n                      id={image.id}\n                      src={image.image}\n                      alt={image.name}\n                    />      \n                  </a>\n                ))\n              }\n\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}